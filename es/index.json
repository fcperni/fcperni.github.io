[{"categories":["Aprendiendo"],"content":"Puedes crear tus propias funciones de Excel usando VBA desde hace mucho tiempo, pero hay una nueva forma de crearlas: Las funciones LAMBDA.\nEsta opción está disponible para el público en general, pero en el momento de publicación de este post (2022) sólo estaba disponible para los participantes de Office Insiders .\nLa documentación oficial de la función LAMBDA es estupenda, pero déjame mostrarte cómo funciona con un ejemplo real. Imagina que tienes un requisito en el que necesitas calcular algo tan sencillo como los días que quedan en el mes dada una fecha determinada. Podrías lograrlo con esta fórmula, si tu fecha está almacenada en la celda A1:\n=DAYS(EOMONTH(A1,0),A1)\nPara crear una función lambda es necesario utilizar la fórmula LAMBDA. Esta fórmula requiere uno o varios parámetros y el código que se aplicará utilizando esos parámetros.\nPara nuestro ejemplo, necesitamos un parámetro que se va a llamar date y el segundo parámetro va a ser la fórmula que queremos aplicar, pero en lugar de usar A1 u otra referencia, necesitamos usar el nombre de nuestro parámetro, en este caso, date.\nTodo esto está muy bien, pero la verdadera potencia de las funciones LAMBDA es poder reutilizarlas y ser llamadas como llamamos al resto de las fórmulas. En lugar de repetir este cálculo muchas veces, queremos construir nuestra propia fórmula y poder llamarla con algo más fácil de recordar, como DAYSLEFTINMONTH. Para ello, podemos utilizar un add-in llamado advanced formula environment como se explica en este post de Chris Gross (contenido en inglés).\nSi hacemos clic en el símbolo +, podemos crear nuestra nueva fórmula, dándole un nombre y escribiendo el código.\nEl siguiente paso es informar al gestor de nombres de que tenemos una nueva formula que queremos incluir en nuestro cinturón de herramientas. Para ello tenemos que sincronizar nuestras funciones con el gestor de nombres, haciendo clic en el botón superior izquierdo. Al hacerlo se mostrará nuestra nueva función en el Gestor de nombres donde podremos revisarla y también incluir una descripción.\nReusando fórmulas Ahora que ya sabemos cómo crear nuestras propias fórmulas, sería genial poder reutilizarlas en todos los dispositivos o incluso compartirlas con tus compañeros. En lugar de escribir directamente la fórmula en el entorno de fórmulas avanzadas, podemos importar un Gist de Github que contenga nuestro código. Esta es una de las muchas características de este complemento, además de añadir comentarios, formatear nuestro código e incluso utilizar intellisense escribiendo tus fórmulas.\nHe creado otro ejemplo. En esta situación, quiero calcular la edad de una persona dada una fecha de nacimiento. La fórmula de Excel sería algo así:\nINT(YEARFRAC(A1, TODAY())))\nTambién he creado este gist que contiene este cálculo en una función lambda llamada AGE. Si lo importamos usando el entorno de fórmulas avanzado podemos ver que la nueva función AGE está disponible.\nEn el post de Chris Gross hay un gist más completo donde se puede encontrar una colección de varias funciones. Te sugiero que importes ese gist y las revises. Podemos usar un namespace para organizarlas, así en caso de que tengamos varias funciones de diferentes fuentes podemos distinguirlas.\n","date":"14-02-2023","img":"","permalink":"/es/posts/excel-lambda-functions/","series":null,"tags":["Excel","Lambda","Programación","Gist"],"title":"Funciones LAMBDA - Construye tus propias fórmulas de Excel de forma sencilla"},{"categories":["Conferencias"],"content":" Dentro de los Power BI Days Bilbao y en la Power BI Virtual Conf 23, tuve el placer de ofrecer el siguiente contenido.\nEn el mundo de la visualización de datos, la simplicidad es sinónimo de éxito. Pero a veces queremos ir un poquito más allá y experimentar con nuevos modelos visuales.\nPower BI ofrece por defecto una gran cantidad de opciones con las que cubriremos la mayoría de nuestras necesidades, pero existe un MarketPlace con un sinfín de opciones para crear diferentes visualizaciones.\nRevisaremos las mejores opciones, ofreciendo alternativas a casos de uso de modelos visuales habituales y veremos en qué situaciones pueden ser una alternativa a los grandes clásicos.\nEn la parte inferior encontraréis enlaces a los datasources, visualizaciones y presentación usadas durante la charla.\nDatos, ejemplos y diapositivas ","date":"30-10-2022","img":"","permalink":"/es/posts/more-visualizations/","series":null,"tags":["Datos","Power BI","Visualización de datos"],"title":"Power BI: ¡Dame más visualizaciones!"},{"categories":["Proyectos Personales"],"content":"Crear un blog con Hugo y alojarlo en GitHub Pages es sencillo. No voy a explicar cómo hacerlo porque existe esta maravilla de post creado por @panicoenlabox , quien lo explica a la perfección y es el que yo he seguido.\nContiene información sobre cómo crear un sitio en Hugo, desplegarlo en GitHub Pages usando GitHub Actions e incluso cómo configurar un dominio personalizado para nuestro blog. Sólo resaltaría que yo he escogido un tema distinto para mi blog: Hugo Bootstrap Theme (puedes ver un caso de uso de la plantilla aquí ).\nAparte de crear este blog, mi objetivo era conectarlo a Google Analytics para recolectar información de usuarios. Estoy muy concienciado acerca de la seguridad de nuestros datos y su anonimización, pero entiendo el valor que aporta saber quién visita nuestras páginas, desde dónde se conectan, que artículos reciben o no visitas y otras métricas importantes.\nPara conectar nuestro blog con Google Analytics, simplemente creé una cuenta en su sitio y configuré una propiedad en él.\nLa propiedad Tracking ID es pública, simplemente la oculto por precaución. Configurando la propiedad Copia el Tracking ID porque necesitarás escribirlo en el config.toml de tu sitio de Hugo.\nEn función de tu tema de Hugo, el fichero config puede tener una estructura diferente. Si todo funciona adecuadamente, puedes navegar al dashboard en tiempo real de Google Analytics y ver que hay una conexión.\nSi tienes un bloqueador de anuncios como UBlock, bloqueará el script de Google Analytics script y no verás tráficao. Deshabilítalo para tu sitio o utilizar otro navegador. He malgastado una barbaridad de tiempo por esto. Google Analytics recopila, analiza y representa visualmente en su web esta información, pero el fin último de este trabajo era extraer los logs registrados en Google Analytics y, en lugar de utilizar las visualizaciones creadas por Google, crear las nuestras usando Tableau. En este ejemplo utilizaremos Tableau Desktop.\nAbrimos el programa y seleccionamos el tipo de conexión apropiado.\nUna nueva ventana del navegador se abrirá donde podremos seleccionar la cuenta de Google que usamos para configurar Google Analytics y darle permisos a Tableau. Después de haber configurado todo, tendremos que retornar a Tableau Desktop.\nEn la pestaña Datasource, tendremos que escoger la cuenta, propiedad y vista de Google Analytics (en caso de que tengamos configuradas más de una). Así mismo, tendremos que escoger un rango de fechas. (Date Range)\nEl paso final será seleccionar qué campos queremos usar como Dimensions y Measures (Dimensiones y Medidas). Hay diversos grupos de campos predefinidos que proporcionan distintas colecciones de campos, los cuales puedes añadir, eliminar o combinar entre sí. Para una primera prueba, podemos seleccionar el grupo Site Usage (Uso del sitio)\nDespués de seguir estos pasos, ya queda de nuestro lado crear las Visualizaciones, Dashboars o Historias con Tableau para analizar como es debido la información acerca de nuestro sitio.\nPuedes encontrar el código fuente de este blog en este repositorio de GitHub.\n","date":"23-11-2021","img":"","permalink":"/es/posts/hugo-blog-with-ga/","series":null,"tags":["Hugo","Blog","Datos","GitHub","Google Analytics","Tableau"],"title":"Crear un Blog con Hugo y conectarlo con Google Analytics"},{"categories":["Conferencias"],"content":" Hay muchas herramientas para crear visualizaciones de datos pero uno de las más comunes y poderosas es Power BI.\nEn la anterior edición aprendimos cómo crear visualizaciones efectivas en Power BI para mostrar los descubrimientos que hay en un conjunto de datos, mostrando información extraído de los logs registrados mediante App Insights en una API alojada en Azure.\nEn esta edición aprenderemos cuál es la estructura de una buena historia, los pasos para creaerla y cómo crear una historia convincente utilizando Power BI para resaltar las claves que yacen enterradas en nuestros datos.\n[Contenido en inglés]\nDatos, ejemplos y diapositivas Video ","date":"18-11-2021","img":"","permalink":"/es/posts/data-storytelling/","series":null,"tags":["Datos","Power BI","Storytelling"],"title":"Creando historias de datos con Power BI"},{"categories":["Conferencias"],"content":"Vivimos en la Era de los datos. Estamos rodeados por datos. Hay millones de herramientas, metodologías, programas, procesos, etc. para extraer, transformar y cargar información, desde simplemente unos cuantos registros hasta incluso decenas de millones.\nPero, ¿qué ocurre después? ¿cómo podemos darle utilidad a tanta información?\nEl objetivo es extraer las claves subyacentes que existen en los datos, y la mejor manera de detectar, identificar y transmitir esas claves es mediante la visualización de datos. Aprenderemos cómo destapar la verdad intrínseca de nuestros conjuntos de datos creando visualizaciones simples pero efectivas mediante Power BI; cuales son los errores más comunes y cómo evitarlos; y finalmente cómo construir una historia para transmitir a nuestra audiencia esas claves.\n[Contenido en inglés]\nDatos, ejemplos y diapositivas Video ","date":"15-11-2021","img":"","permalink":"/es/posts/data-visualization/","series":null,"tags":["Datos","Power BI","Visualización de datos"],"title":"Visualización de datos con Power BI"},{"categories":null,"content":"Francisco Cruzado Perni trabaja como Profesor Asociado en IE University, donde imparte clases de Análisis y Visualización de Datos, así como Lead Development Engineer en Analitycalways, donde diseña y desarrolla software para el sector retail.\nAnteriormente trabajó como Senior Software Engineer and Analyst en Haitong Bank, un banco de inversión chino donde gestionó y desarrolló proyectos de bases de datos y aplicaciones web.\nFrancisco también ha sido Consultor Senior para diferentes organizaciones dentro de la Administración Pública, como Patrimonio Nacional y el Ministerio de Economía y Hacienda; así como en el sector financiero (Banco Santander). Empezó su carrera como desarrollador colaborando para la Junta de Castilla y León.\nFrancisco es Ingeniero Técnico en Informática de Gestión por la Universidad de Valladolid y finalizó sus estudios en el Institute of Technology of Sligo, Irlanda.\n","date":"15-11-2021","img":"","permalink":"/es/about/","series":null,"tags":null,"title":"Sobre mí"},{"categories":["Proyectos Personales"],"content":" Esta es mi primera utilidad escrita en Python, creada mientras estaba aprendiendo lo imprescindible antes de adentrarme en el maravilloso mundo de Databricks.\nEste programa une todos los ficheros con formato csv que estén en una carpeta en un único fichero.\nLa carpeta por defecto es csv y el nombre del fichero de salida por defecto es joined.csv, pero estas opciones se pueden alterar con estos modificadores:\n1 -h --help Muestra esta ayuda (en inglés). 2 -f --folder Establece la carpeta donde se encuentran los ficheros csv. 3 -o --output Establece el nombre del fichero de salida. Ejemplo de uso\n1py joincsv.py -f misFicheros -o ficherounido.csv Esta utilidad está basada en estos artículos:\nhttps://learningactors.com/how-to-combine-multiple-csv-files-with-8-lines-of-code/ https://github.com/ekapope/Combine-CSV-files-in-the-folder/blob/master/Combine_CSVs.py https://stackabuse.com/command-line-arguments-in-python/ GitHub Repository ","date":"26-10-2021","img":"","permalink":"/es/posts/joincsv/","series":null,"tags":["Data","Python","CSV","Utilidades"],"title":"JoinCsv"}]