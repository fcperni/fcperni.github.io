[{"categories":["Conferences"],"content":" Within the Power BI Days Bilbao, I had the pleasure to deliver the following content.\nIn the world of data visualization, simplicity is synonymous with success. But sometimes we want to go a little further and experiment with new visual models.\nPower BI offers by default a lot of options with which we will cover most of our needs, but there is a MarketPlace with endless options to create different visualizations.\nWe will review the best options, offering alternatives to common visual model use cases and we will see in which situations they can be an alternative to the great classics.\nBelow you will find links to the datasources, visualizations and presentation used during the talk.\n[Content in Spanish]\nDatasources, examples and slides ","date":"Oct 30, 2022","img":"","permalink":"/posts/more-visualizations/","series":null,"tags":["Data","Power BI","Data Visualization"],"title":"Power BI: Gimme more visualizations!"},{"categories":["Learning"],"content":"You could create your own Excel functions using VBA since long time ago, but there is a new way of creating them: LAMBDA functions.\nAs of today, this option is only available for Office Insiders participants, but it will be soon available to the general public.\nThe LAMBDA function official documentation is great but let me show you how this works with an actual example. Imagine that you have a requirement where you need to calculate something as easy as the days that are left in the month for a given date. You could achieve this with this formula, if your date is stored in cell A1:\n=DAYS(EOMONTH(A1,0),A1)\nIn order to create a lambda function, you need to use the formula LAMBDA . This formula requires one or several parameters and the code that will be applied using those parameters.\nFor our example, we need one parameter that is going to be called date and the second parameter is going to be the formula that we want to apply, but instead of using A1 or another reference, we need to use the name of our parameter, in this case, date\nAll of this is great, but the real power of LAMBDA functions is to be able to reuse them and to be called like we called the rest of the formulas. Instead of repeating this calculation many times, we want to build our own formula and be able to call it with something easier to remember, such as DAYSLEFTINMONTH. In order to do it, we can use and add-in called advanced formula environment as explained in this post by Chris Gross.\nIf we click on the + symbol, we can create our brand new formula, giving it a name and typing the code.\nThe next step is to inform the name manager that we have a new formula that need to be included in our toolbelt. In order to do so we must synchronize our functions with the name manager, clicking on the upper left button. Doing so will display our new function in the Name Manager where we could review it and also include a description.\nReusing formulas Now that we now how to create our own formulas, it will be awesome if we could reuse them across devices or even share them with your colleagues. Instead of directly typing the formula in the advance formula environment, we can import a Github Gist containing our code. This is one of the many features of this add-in, besides adding comments, formatting our code and even use intellisense writing your formulas.\nI have created another example. In this situation, I want to calculate the age of a person given a birth date. The Excel formula will be something like this:\nINT(YEARFRAC(A1, TODAY())))\nI created a gist that contains this calculation in a lambda function called AGE. If we import it using the advance formula environment we can see that the new AGE function is available.\nIn Chris Gross\u0026rsquo;s post there is a more complete gist where you can find a collection of several functions. I suggest to import that gist and check them. We can use a namespace to organize them, so in case that we have multiple functions from different sources we can distinguish them.\n","date":"Feb 15, 2022","img":"","permalink":"/posts/excel-lambda-functions/","series":null,"tags":["Excel","Lambda","Programming","Gist"],"title":"LAMBDA functions - Build your own Excel formulas easily"},{"categories":["Pet Projects"],"content":"Creating a blog with Hugo and hosting it in GitHub Pages is easy. I am not going to explain it because you have this wonderful post by @panicoenlabox , who explains it perfectly and it is the one that I followed.\nIt contains information about creating a site with Hugo, deploying it to GitHub pages via GitHub Actions and even setting your custom domain for the site. I would just highlight that I used a different template, in my case, Hugo Bootstrap Theme (you can see a real life example of this template here ).\nBesides creating the blog, my goal was to connect it to Google Analytics in order to collect user information. I am really concerned about data security and data anonymization, but I do understand the value of knowing who visits your sites, from where are they connected, which pages receive visits or don\u0026rsquo;t and many other important KPIs.\nFor connecting the blog with Google Analytics, I simply created an account in their site and set up a property.\nCopy the Tracking Id, as you will need it to set it in the config.toml of your Hugo Site.\nIf everything works properly, you can go to the Real Time dashboard in Google Analytics and see one connection.\nIf you have an Ad Blocker, like UBlock, it will block the Google Analytics script. Disable it for your site or use another browser. I wasted an incredible amount of time on this. Google Analytics collects, analyzes and visually represents inside their web this information, but the ultimate goal was to extract the logs recorded in Google Analytics and instead of using the already provided visualizations by Google, create our owns with Tableau. In this example we will use Tableau Desktop.\nWe open it and select the appropriate connection\nA browser tab will open and we need to select the Google account that we used for setting Google Analytics and give permissions to Tableau. After we have set up everything, we need to go back to Tableau Desktop.\nIn the Datasource tab, we will need to select the Google Analytics account, property and view (in case that we had more than one). Also, we need to select a Date Range.\nThe final step will be to select Dimensions and Measures. There a severals pre-defined groups that will provide you with a collections of fields, which you con add, remove or combine with others. For a first contact, we can select the Site Usage group.\nAfter following all these steps, is up to us to create our Visualizations, Dashboards and or Stories with Tableau to analyze properly our site data.\nYou can find the source code of this blog in this GitHub repository .\n","date":"Nov 23, 2021","img":"","permalink":"/posts/hugo-blog-with-ga/","series":null,"tags":["Hugo","Blog","Data","GitHub","Google Analytics","Tableau"],"title":"Create a Hugo Blog and connect it with Google Analytics"},{"categories":["Conferences"],"content":" There are many tools for creating data visualizations, but one of the most common used and powerful is Power BI.\nIn the previous edition we learned how to create effective visualizations in Power BI to display insights existing on data, showing information extracted from logs recorded in App Insights of an API hosted in Azure.\nIn this edition we will learn what is the structure of a good story, the steps to create it and how to build a compelling story using Power BI to highlight the information that lies underneath our data.\nThis session was imparted in netcoreconf 2021-2\nDatasources, examples and slides Video ","date":"Nov 18, 2021","img":"","permalink":"/posts/data-storytelling/","series":null,"tags":["Data","Power BI","Storytelling"],"title":"Data Storytelling with Power BI"},{"categories":["Conferences"],"content":"We live in the era of data. We are surrounded by data. There are tons of tools, methodologies, software, processes, etc. to extract, transform and load from just a couple or records to even tens of millions of records. But what about after all that? How can we make so much data usable?\nThe key is to extract the inner insights existing on data, and the best way to detect, identify and transmit insights is visualization. We will learn how to uncover the underlying truth of our datasets creating simple but effective visualizations with Power BI, what are the most common mistakes and how to avoid them, and finally how to build a story to deliver the intrinsic message that lies beneath our data to our audience.\nThis session was imparted in netcoreconf 2021\nDatasources, examples and slides Video ","date":"Nov 15, 2021","img":"","permalink":"/posts/data-visualization/","series":null,"tags":["Data","Power BI","Data Visualization"],"title":"Data Visualization with Power BI"},{"categories":["Pet Projects"],"content":" This was my first utility written in Python, when I was learning the basics before going deep into the Databricks world.\nThis program will join all the csv files of a folder in a single one.\nDefault folder is \u0026ldquo;csv\u0026rdquo; and default output file is \u0026ldquo;joined.csv\u0026rdquo;.\nAvailable options:\n1 -h --help Display this help screen. 2 -f --folder Sets the folder that contains the files. 3 -o --output Sets the name of the output file. Usage example:\n1py joincsv.py -f myfiles -o joinedfile.csv Based on these articles:\nhttps://learningactors.com/how-to-combine-multiple-csv-files-with-8-lines-of-code/ https://github.com/ekapope/Combine-CSV-files-in-the-folder/blob/master/Combine_CSVs.py https://stackabuse.com/command-line-arguments-in-python/ GitHub Repository ","date":"Oct 26, 2021","img":"","permalink":"/posts/joincsv/","series":null,"tags":["Data","Python","CSV","Utilities"],"title":"JoinCsv"},{"categories":null,"content":"Francisco Cruzado Perni is an Associate professor at IE and a Lead Development Engineer in Analitycalways, designing and developing software for the retail sector.\nFormerly he worked as Senior Software Engineer and Analyst at Haitong Bank, a Chinese investment bank, where he managed software and database projects.\nPreviously Francisco held a Senior Consultant role for different organizations inside the public administration, such as Patrimonio Nacional and Ministerio de Economía y Hacienda; as well as in the finance sector (Banco Santander). He started his career as a developer within Junta de Castilla y León.\nFrancisco holds a BSc in Computer Science from Universidad de Valladolid and he collaborated with the Institute of Technology of Sligo, Ireland during the last steps of his academic formation.\n","date":"Oct 26, 2021","img":"","permalink":"/about/","series":null,"tags":null,"title":"About"}]